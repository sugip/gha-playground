name: Create Release Draft

on:
  push:
    branches:
      - 'main'

jobs:
  dummy_build:
    runs-on: ubuntu-latest
    steps:
      - name: Echo
        run: echo 'build something...'
  create_release_draft:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    needs: ['dummy_build']
    steps:
      - name: Setup tag and name 
        env: 
          TZ: "Asia/Tokyo"
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: setup
        run: |
          TAG_PREFIX="Releases/$(date +'%Y%m%d')"
          NAME_PREFIX="$(date +'%Y/%m/%d')"

          CURRENT_TAG=$(gh release --repo ${{github.repository}} view --json tagName --jq .tagName)

          # "Releases/YYYYMM_v1.0" を "Releases/YYYYMM" と "1" と "0" に分解
          TAG_PARTS=(${CURRENT_TAG//[_v.]/ })
          CURRENT_TAG_PREFIX=${TAG_PARTS[0]}
          CURRENT_MAJOR_VERSION=${TAG_PARTS[1]}
          CURRENT_PATCH_VERSION=${TAG_PARTS[2]}

          if [ "${CURRENT_TAG_PREFIX}" = "${TAG_PREFIX}" ]; then
              echo "There is already a release for the same date."
              NEW_PATCH_VERSION=$(expr ${CURRENT_PATCH_VERSION} + 1)
              # 同日リリースでのメジャーバージョンは上がらない想定
              NEW_VERSION="v${CURRENT_MAJOR_VERSION}.${NEW_PATCH_VERSION}"
              NEW_TAG="${TAG_PREFIX}_${NEW_VERSION}"
              NEW_NAME="$NAME_PREFIX $NEW_VERSION"
          else
              echo "This is a new release today."
              NEW_VERSION="v1.0"
              NEW_TAG="${TAG_PREFIX}_${NEW_VERSION}"
              NEW_NAME="${NAME_PREFIX} ${NEW_VERSION}"
          fi

          echo "tag=${NEW_TAG}" >> $GITHUB_OUTPUT
          echo "name=${NEW_NAME}" >> $GITHUB_OUTPUT
      - uses: release-drafter/release-drafter@v6
        with:
          name: ${{ steps.setup.outputs.name }}
          tag: ${{ steps.setup.outputs.tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
